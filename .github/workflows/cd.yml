name: CD

on:
  push:
    branches:
      - stable

jobs:
  build:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Restore Dependency Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-dependency-cache-${{ hashFiles('**/package.json') }}
      - run: npm install
      - run: npm run bootstrap
      - run: npm run publish:ci -- --yes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: Ionitron
          GIT_AUTHOR_EMAIL: hi@ionicframework.com
          GIT_COMMITTER_NAME: Ionitron
          GIT_COMMITTER_EMAIL: hi@ionicframework.com
      - name: GitHub Container Registry Login
        run: echo ${GH_TOKEN} | docker login ghcr.io -u ionitron --password-stdin
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Build Container
        run: |
            docker build \
              --build-arg IONIC_CLI_VERSION=$(npm info @ionic/cli dist-tags.latest) \
              --tag ghcr.io/${{ github.repository }}:latest \
              --tag ghcr.io/${{ github.repository}}:$(npm info @ionic/cli dist-tags.latest) \
              .
      - name: Push Container as latest
        run: docker push ghcr.io/${{ github.repository }}:latest
      - name: Push Container as version
        run: docker push ghcr.io/${{ github.repository }}:$(npm info @ionic/cli dist-tags.latest)