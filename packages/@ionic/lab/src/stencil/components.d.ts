/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface IonlabApp {

    }
  }

  interface HTMLIonlabAppElement extends StencilComponents.IonlabApp, HTMLStencilElement {}

  var HTMLIonlabAppElement: {
    prototype: HTMLIonlabAppElement;
    new (): HTMLIonlabAppElement;
  };
  interface HTMLElementTagNameMap {
    'ionlab-app': HTMLIonlabAppElement;
  }
  interface ElementTagNameMap {
    'ionlab-app': HTMLIonlabAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ionlab-app': JSXElements.IonlabAppAttributes;
    }
  }
  namespace JSXElements {
    export interface IonlabAppAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface IonlabDeviceFrame {
      'icon': string;
      'platform': string;
      'platformName': string;
      'url': string;
    }
  }

  interface HTMLIonlabDeviceFrameElement extends StencilComponents.IonlabDeviceFrame, HTMLStencilElement {}

  var HTMLIonlabDeviceFrameElement: {
    prototype: HTMLIonlabDeviceFrameElement;
    new (): HTMLIonlabDeviceFrameElement;
  };
  interface HTMLElementTagNameMap {
    'ionlab-device-frame': HTMLIonlabDeviceFrameElement;
  }
  interface ElementTagNameMap {
    'ionlab-device-frame': HTMLIonlabDeviceFrameElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ionlab-device-frame': JSXElements.IonlabDeviceFrameAttributes;
    }
  }
  namespace JSXElements {
    export interface IonlabDeviceFrameAttributes extends HTMLAttributes {
      'icon'?: string;
      'platform'?: string;
      'platformName'?: string;
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface IonlabPlatformDropdown {
      'activePlatforms': string[];
    }
  }

  interface HTMLIonlabPlatformDropdownElement extends StencilComponents.IonlabPlatformDropdown, HTMLStencilElement {}

  var HTMLIonlabPlatformDropdownElement: {
    prototype: HTMLIonlabPlatformDropdownElement;
    new (): HTMLIonlabPlatformDropdownElement;
  };
  interface HTMLElementTagNameMap {
    'ionlab-platform-dropdown': HTMLIonlabPlatformDropdownElement;
  }
  interface ElementTagNameMap {
    'ionlab-platform-dropdown': HTMLIonlabPlatformDropdownElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ionlab-platform-dropdown': JSXElements.IonlabPlatformDropdownAttributes;
    }
  }
  namespace JSXElements {
    export interface IonlabPlatformDropdownAttributes extends HTMLAttributes {
      'activePlatforms'?: string[];
      'onIonlabPlatformToggled'?: (event: CustomEvent) => void;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface IonlabPreview {
      'activeDevices': string[];
      'url': string;
    }
  }

  interface HTMLIonlabPreviewElement extends StencilComponents.IonlabPreview, HTMLStencilElement {}

  var HTMLIonlabPreviewElement: {
    prototype: HTMLIonlabPreviewElement;
    new (): HTMLIonlabPreviewElement;
  };
  interface HTMLElementTagNameMap {
    'ionlab-preview': HTMLIonlabPreviewElement;
  }
  interface ElementTagNameMap {
    'ionlab-preview': HTMLIonlabPreviewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ionlab-preview': JSXElements.IonlabPreviewAttributes;
    }
  }
  namespace JSXElements {
    export interface IonlabPreviewAttributes extends HTMLAttributes {
      'activeDevices'?: string[];
      'url'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface IonlabSidebar {
      'visible': boolean;
    }
  }

  interface HTMLIonlabSidebarElement extends StencilComponents.IonlabSidebar, HTMLStencilElement {}

  var HTMLIonlabSidebarElement: {
    prototype: HTMLIonlabSidebarElement;
    new (): HTMLIonlabSidebarElement;
  };
  interface HTMLElementTagNameMap {
    'ionlab-sidebar': HTMLIonlabSidebarElement;
  }
  interface ElementTagNameMap {
    'ionlab-sidebar': HTMLIonlabSidebarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'ionlab-sidebar': JSXElements.IonlabSidebarAttributes;
    }
  }
  namespace JSXElements {
    export interface IonlabSidebarAttributes extends HTMLAttributes {
      'onIonlabSidebarCloseClicked'?: (event: CustomEvent) => void;
      'visible'?: boolean;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface SkFadingCircle {

    }
  }

  interface HTMLSkFadingCircleElement extends StencilComponents.SkFadingCircle, HTMLStencilElement {}

  var HTMLSkFadingCircleElement: {
    prototype: HTMLSkFadingCircleElement;
    new (): HTMLSkFadingCircleElement;
  };
  interface HTMLElementTagNameMap {
    'sk-fading-circle': HTMLSkFadingCircleElement;
  }
  interface ElementTagNameMap {
    'sk-fading-circle': HTMLSkFadingCircleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'sk-fading-circle': JSXElements.SkFadingCircleAttributes;
    }
  }
  namespace JSXElements {
    export interface SkFadingCircleAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
